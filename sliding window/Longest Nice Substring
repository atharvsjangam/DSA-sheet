class Solution:
    def longestNiceSubstring(self, s: str) -> str:
        def is_nice(sub: str) -> bool:
            # A nice string is one where every character has both its lowercase and uppercase form
            return all(c.lower() in sub and c.upper() in sub for c in sub)
        
        n = len(s)
        longest = ""
        
        # Iterate through all substrings of s
        for i in range(n):
            for j in range(i + 1, n + 1):
                sub = s[i:j]
                if is_nice(sub) and len(sub) > len(longest):
                    longest = sub
        
        return longest

# Example usage
if __name__ == "__main__":
    s = "YazaAay"
    solution = Solution()
    result = solution.longestNiceSubstring(s)
    print("Longest nice substring:", result)
