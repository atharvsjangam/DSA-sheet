from typing import List


class Solution:
    def decrypt(self, code: List[int], k: int) -> List[int]:
        n = len(code)
        result = [0] * n
        
        # Case when k is 0, return a list of 0s
        if k == 0:
            return result
        
        # If k is positive, we sum the next k elements in a cyclic manner
        if k > 0:
            for i in range(n):
                result[i] = sum(code[(i+j) % n] for j in range(1, k+1))
        
        # If k is negative, we sum the previous k elements in a cyclic manner
        if k < 0:
            for i in range(n):
                result[i] = sum(code[(i-j) % n] for j in range(1, -k+1))
        
        return result

# Example usage
if __name__ == "__main__":
    code = [5, 7, 1, 4]
    k = 3
    solution = Solution()
    result = solution.decrypt(code, k)
    print("Decrypted result:", result)
