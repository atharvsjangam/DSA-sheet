class MyHashMap:

    def __init__(self):
        self.map = [None] * 1000

    def put(self, key: int, value: int) -> None:
        index = key % 1000
        if self.map[index] is None:
            self.map[index] = []
        for i, (k, v) in enumerate(self.map[index]):
            if k == key:
                self.map[index][i] = (key, value)
                return
        self.map[index].append((key, value))

    def get(self, key: int) -> int:
        index = key % 1000
        if self.map[index] is None:
            return -1
        for k, v in self.map[index]:
            if k == key:
                return v
        return -1

    def remove(self, key: int) -> None:
        index = key % 1000
        if self.map[index] is None:
            return
        self.map[index] = [(k, v) for k, v in self.map[index] if k != key]
